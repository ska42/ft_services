apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
data:
  telegraf.conf: |+
    # Configuration for telegraf agent
    [agent]
    ## Default data collection interval for all inputs
      interval = "10s"
      hostname = "telegraf-polling-service"
      ## Rounds collection interval to 'interval'
      ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
      round_interval = true
    ###############################################################################
    #                            OUTPUT PLUGINS                                   #
    ###############################################################################
    # Configuration for sending metrics to InfluxDB
    [[outputs.influxdb]]
      urls = ["http://influxdb:8086"]
      database = "influxdb"
      username = "root"
      password = "password"
    ###############################################################################
    #                            INPUT PLUGINS                                    #
    ###############################################################################
    [[inputs.kubernetes]]
      url = "https://__MINIKUBE_IP__:10250"
      # bearer_token = "/run/secrets/kubernetes.io/serviceaccount/token"
      namespace = ""
      insecure_skip_verify = true
    [[inputs.kube_inventory]]
    ## URL for the Kubernetes API
      url = "https://kubernetes"
      # namespace = ""
      # bearer_token = "/run/secrets/kubernetes.io/serviceaccount/token"
      resource_include = ["pods", "deployments", "nodes", "statefulsets"]
      insecure_skip_verify = true
    # Read metrics about cpu usage
    [[inputs.cpu]]
      ## Whether to report per-cpu stats or not
      percpu = true
      ## Whether to report total system cpu stats or not
      totalcpu = true
      ## If true, collect raw CPU time metrics.
      collect_cpu_time = false
      ## If true, compute and report the sum of all non-idle CPU states.
      report_active = false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      serviceAccountName: telegraf
      containers:
        - image: telegraf:alpine
          name: telegraf
          volumeMounts:
            - mountPath: /etc/telegraf/telegraf.conf
              name: telegraf-config
              subPath: telegraf.conf
              readOnly: true
      volumes:
        - name: telegraf-config
          configMap:
            name: telegraf-config
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: influx:cluster:viewer
  labels:
    rbac.authorization.k8s.io/aggregate-view-telegraf: "true"
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes", "nodes", "endpoints", "deployments", "services", "pods", "statefulsets", "daemonsets", "persistentvolumeclaims", "ingresses"]
    verbs: ["get", "list"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: influx:telegraf
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-view-telegraf: "true"
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: influx:telegraf:viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: influx:telegraf
subjects:
  - kind: ServiceAccount
    name: telegraf
    namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: telegraf
  labels:
    app: telegraf
